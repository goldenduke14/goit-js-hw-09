{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SACMC,EAAOC,SAASC,cAAc,SAC9BC,EAAaH,EAAKE,cAAc,uBAgCtC,SAASE,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAvCPN,EAAKc,iBAAiB,UAAU,SAAAC,GAC9BA,EAAMC,iBAMN,IAJA,IAAMC,EAAQC,OAAOf,EAAWgB,OAC1BC,EAAOF,OAAOlB,EAAKE,cAAc,sBAAsBiB,OACvDE,EAASH,OAAOlB,EAAKE,cAAc,wBAAwBiB,OAExDG,EAAI,EAAGA,EAAID,EAAQC,IAC1BlB,EAAckB,EAAI,EAAGL,EAAQK,EAAIF,GAC9BG,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MACjBmB,EAAA3B,GAAS4B,OAAOC,QACd,uBAAwCC,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,MAC5C,CACAuB,SAAS,EACTC,MAAO,S,IAIZC,OAAM,SAAAP,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MAClBmB,EAAA3B,GAAS4B,OAAOM,QACd,sBAAqCJ,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,MAC3C,CACEuB,SAAS,EACTC,MAAO,S","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst form = document.querySelector('.form');\nconst delayInput = form.querySelector('input[name=\"delay\"]');\n\nform.addEventListener('submit', event => {\n  event.preventDefault();\n\n  const delay = Number(delayInput.value);\n  const step = Number(form.querySelector('input[name=\"step\"]').value);\n  const amount = Number(form.querySelector('input[name=\"amount\"]').value);\n\n  for (let i = 0; i < amount; i++) {\n    createPromise(i + 1, delay + i * step)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`,\n          {\n            useIcon: false,\n            width: '240px',\n          }\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`,\n          {\n            useIcon: false,\n            width: '240px',\n          }\n        );\n      });\n  }\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$delayInput","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","delay1","Number","value","step","amount","i","then","param","$parcel$interopDefault","Notify","success","concat","useIcon","width","catch","failure"],"version":3,"file":"03-promises.4a5e9f6c.js.map"}